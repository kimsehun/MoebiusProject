<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.moebius.user.UserMapper">
	<!-- 회원가입 -->
	<insert id="registUser" parameterType="UserVO" >
	INSERT INTO m_user(
				user_id,user_name,user_pwd,user_pwd_ok,user_age,user_pwd_hint,user_pwd_answer,
				user_gender,user_email,user_phone,user_zipcode,
				user_addr1,user_addr2)
	VALUES(		
				#{user_id},#{user_name},#{user_pwd},#{user_pwd_ok},#{user_age},#{user_pwd_hint},#{user_pwd_answer},
				#{user_gender},#{user_email},#{user_phone},#{user_zipcode},
				#{user_addr1},#{user_addr2})
	</insert>
	
	<!-- zipcode 리스트 불러오기 -->
	<select id="searchZipcode" resultType="ZipcodeVO" parameterType="String" >
	SELECT substr(zipcode, 1, 3) AS zipcode1,
	   substr(zipcode, 5, 3) AS zipcode2,
	   trim(sido || ' ' || gugun || ' ' || dong || ' ' ||
	   ri || ' ' || bunji) AS addr1
	FROM zipcode
	WHERE dong like '%' || #{area} || '%'
	</select>
	
	<!-- id 중복 체크 -->
	<select id="idCheck" resultType="int" parameterType="String">
	SELECT count(*) AS cnt
	FROM m_user
	WHERE user_id = #{user_id}
	</select>
	
	<!--  email 중복 체크  --> 
  	<select id="Check" resultType="int" parameterType="UserVO">
  	SELECT count(*) AS cnt 
  	FROM m_user 
  	WHERE user_email=#{user_email}
  	</select> 

	<!-- 로그인 -->
	<select id="getUser" resultType="UserVO" parameterType="UserVO">
	SELECT user_id, user_name FROM m_user
	WHERE user_id=#{user_id} AND user_pwd=#{user_pwd}
	</select>

	<!-- 회원탈퇴 -->
	<delete id="deleteUser" parameterType="UserVO" >
	DELETE FROM m_user
	WHERE user_id=#{user_id} AND user_pwd=#{user_pwd}
	</delete>
	
	<!-- 회원 수정시 회원 정보 가져오기 -->
	<select id="getUserInfo" resultType="UserVO" parameterType="UserVO">
	SELECT	user_id,user_name,user_pwd,user_pwd_ok,user_pwd_hint,user_pwd_answer,
			user_email,user_phone,user_zipcode,
			user_addr1,user_addr2
	FROM m_user
	WHERE user_id=#{user_id}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateUser" parameterType="UserVO" >
	UPDATE m_user
	SET user_phone=#{user_phone}, user_email=#{user_email}, user_pwd_answer=#{user_pwd_answer},
		user_zipcode=#{user_zipcode}, user_addr1=#{user_addr1}, user_addr2=#{user_addr2}
	WHERE user_pwd=#{user_pwd} AND user_id=#{user_id}
	</update>
	
	<!-- email 주소 받아오기 -->
	<select id="emailaddr" parameterType="String" resultType="UserVO">
	SELECT user_email
	FROM m_user
	WHERE user_id=#{user_id}
	</select>
	
	<!--  아이디 찾기   --> 
  	<select id="searchId" resultType="UserVO" parameterType="UserVO">\
  	SELECT user_id,user_email,user_name 
  	FROM m_user 
  	WHERE user_email=#{user_email} AND user_name=#{user_name}
  	</select> 

	
	<!-- 비밀번호 찾기 -->
	<select id="searchPwd" resultType="UserVO" parameterType="UserVO">
	SELECT user_pwd_ok, user_name, user_email
	FROM m_user
	WHERE user_pwd_hint=#{user_pwd_hint} AND user_pwd_answer=#{user_pwd_answer}	
	</select>
	
	<!-- 비밀번호 변경 시 기존 비밀번호 가져오는거 -->
	<select id="getPwd" resultType="String" parameterType="InfoVO">
	SELECT user_pwd
	FROM m_user
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="changePwd" parameterType="InfoVO" >
	UPDATE m_user
	SET user_pwd=#{new_pwd}, user_pwd_ok=#{new_pwd_ok}
	WHERE user_id=#{user_id} AND user_pwd=#{user_inpwd}
	</update>
	
	<!-- 댓글삽입시 포인트 증가 -->
	<update id="pointUp" parameterType="String">
	UPDATE m_user SET
	user_point = user_point + 5000
	WHERE user_id=#{user_id}
	</update>
	
	<!--  포인트정보 --> 
  	<select id="getPoint" parameterType="String" resultType="int">
  	SELECT user_point 
  	FROM m_user 
  	WHERE user_id=#{user_id}
  	</select> 
	
	<!-- 예약확인 -->
	<select id="getReserveInfo" parameterType="UserInfoVO" resultType="UserInfoVO">
	SELECT u.user_name, l.location_name, s.screen_name, m.movie_title, t.seat_name, m.movie_point, to_char(h.schedule_time,'HH24:MI') AS schedule_time, to_char(h.schedule_date,'YYYYMMDD') AS schedule_date
	FROM m_user u, m_movie m, m_location l, m_screen s, m_seat t, m_reserve r, m_schedule h
	WHERE u.user_id=#{user_id} AND r.user_id=#{user_id} AND s.screen_name=t.screen_no AND t.location_no=l.location_no AND t.seat_no=r.seat_no AND r.schedule_no=h.schedule_no AND m.movie_no=r.movie_no
	</select>
	
	<!--  영화 예매시 포인트 삭감 --> 
  	<update id="usePoint" parameterType="SitVO">
  	UPDATE m_user SET 
  	user_point = user_point - #{movie_point} 
  	WHERE user_id=#{user_id}
  	</update> 
  	
 	<!--  예매를 위한 유저 포인트 체크  --> 
  	<select id="getUserPoint" parameterType="String" resultType="int">
  	SELECT user_point 
  	FROM m_user WHERE 
  	user_id=#{user_id}
  	</select>
  	
  	<!-- 영화등급에 필요한 나이 출력 -->
  	<select id="getAge" parameterType="String" resultType="int">
  	SELECT user_age
  	FROM m_user
  	WHERE user_id=#{user_id}
  	</select>
	
</mapper>
